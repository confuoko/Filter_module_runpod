import os
import torch
from demucs.pretrained import get_model
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()


def load_demucs_model(model_name="htdemucs"):
    """
    –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏ Demucs. –ï—Å–ª–∏ –º–æ–¥–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –ª–æ–∫–∞–ª—å–Ω–æ, —Å–∫–∞—á–∏–≤–∞–µ—Ç—Å—è –∏–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞.

    Args:
        model_name (str): –ò–º—è –º–æ–¥–µ–ª–∏ Demucs (–Ω–∞–ø—Ä–∏–º–µ—Ä, "htdemucs").

    Returns:
        torch.nn.Module: –ó–∞–≥—Ä—É–∂–µ–Ω–Ω–∞—è –º–æ–¥–µ–ª—å Demucs.
    """
    # –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –º–æ–¥–µ–ª–µ–π
    save_dir = os.getenv("DEMUCS_MODEL_DIR", "pretrained_models/demucs")
    os.makedirs(save_dir, exist_ok=True)

    # –ü—É—Ç—å –∫ –º–æ–¥–µ–ª–∏
    model_path = os.path.join(save_dir, f"{model_name}.th")

    if os.path.exists(model_path):
        print(f"‚ö° Demucs: –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ {model_path}")
        model = torch.load(model_path)
    else:
        print(f"üîΩ Demucs: –°–∫–∞—á–∏–≤–∞–µ–º –º–æ–¥–µ–ª—å '{model_name}' –≤ {save_dir}...")
        model = get_model(name=model_name)
        torch.save(model.state_dict(), model_path)
        print("‚úÖ Demucs –º–æ–¥–µ–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞.")

    # –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏ —Å –ø—É—Ç—ë–º
    model = get_model(name=model_name)
    model.load_state_dict(torch.load(model_path))

    return model
